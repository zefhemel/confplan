server server

database host "localhost" name "confplan" username "confplan" password "qwe153"

import mobl::server
import mobl::server::httpserver
import data

middleware bodyDecoder()
middleware staticProvider("www")
middleware persistenceMiddleware()

@service GET /
function root(req : Request, res : Response) {
  res.send("Waddup2!?");
}

@service GET /conferences
function listConferences(req : Request, res : Response) {
  var conferences = Conference.all().list();
  res.send(conferences);
}

@service GET /listEvents
function listEvents(req : Request, res : Response) {
  var events = Event.all() where conference == req.query.conference order by startDate;
  res.send(events.list());
}

@service POST /newConference
function newConference(req : Request, res : Response) {
  var conference = Conference();
  conference.name = req.body.name;
  conference.description = req.body.description;
  add(conference);
  res.send(conference.id);
}

@service POST /editConference
function editConference(req : Request, res : Response) {
  var conference = Conference.findBy("id", req.body.id);
  if(conference) {
    conference.name = req.body.name;
    conference.description = req.body.description;
    res.send("OK");
  } else {
    res.send("Not found");
  }
}

@service GET /viewConference
function getConference(req : Request, res : Response) {
  var conference = Conference.findBy("id", req.params.id);
  if(conference) {
    res.send(conference) ;
  } else {
    res.send("Not found");
  }
}

@service POST /newEvent
function newEvent(req : Request, res : Response) {
  var conference = Conference.findBy("id", req.body.conference);
  if(conference) {
    var event = Event(conference=conference);
    event.name = req.body.name;
    event.startDate = DateTime.fromTimestamp(req.body.startDate);
    event.endDate = DateTime.fromTimestamp(req.body.startDate);
    event.speaker = req.body.speaker;
    event.abstract = req.body.abstract;
    add(event);
    res.send("OK");
  } else {
    res.send("No such conference");
  }
}

