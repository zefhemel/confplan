application confplan

title "ConfPlan"

import data
import dummy
import logic
import mobl::ui::generic
import mobl::notify

load confplan.css

var daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

screen root() {
  header("Determining location")
  "One moment please..."

  script {
    async {
      //loadLocalConferences();
      var cnt = Conference.all().count();
      if(cnt == 0) {
        loadGpce();
        loadSle();
        flushDatabase();
      }
      pickConference();
    }
  }
}

screen pickConference() {
  header("Conferences")
  group {
    list(conf in Conference.all()) {
      itemArrow(onclick={ conference(conf); }) { label(conf.name) }
    }
  }
  /*button("Reset all data", onclick={
        resetDatabase();
        reload();
      })*/
}

screen conference(conf : Conference) {
  control schedule() {
    header("Schedule") { backButton() }
    group {
      itemArrow(onclick={ conferenceAll(conf); }) { "All" }
      list(day in determineDays(conf)) {
        itemArrow(onclick={ conferenceForDay(conf, day); }) { label(daysOfWeek.get(day.getDay())) }
      }
    }
  }

  control upcoming() {
    var nowDate = DateTime.create(2010, 9, 7)//now()
    header("What's next?") { backButton() }
    script {
      repeat(15*60000, {
        nowDate = now();
      });
    }
    masterDetail(conf.events where startDate > nowDate order by startDate asc limit 10, eventItem, eventDetails)
  }

  control search() {
    header("Search") { backButton() }
    var phrase = ""
    searchBox(phrase, placeholder="Search term")
    masterDetail(Event.searchPrefix(phrase) where conference == conf limit 10, eventItem, eventDetails)
  }

  tabSet([("Schedule", "", schedule), ("Next", "", upcoming), ("Search", "", search)])
}

screen conferenceForDay(conf : Conference, startDate : DateTime) {
  var tomorrow = DateTime.create(startDate.getFullYear(), startDate.getMonth(), startDate.getDate() + 1)
  header(conf.name + ": " + daysOfWeek.get(startDate.getDay())) {
    backButton()
  }
  masterDetail(conf.events where startDate >= startDate && startDate < tomorrow order by startDate asc, eventItem, eventDetails)
}

screen conferenceAll(conf : Conference) {
  header(conf.name) { backButton() }
  list(day in determineDays(conf)) {
    var tomorrow = DateTime.create(day.getFullYear(), day.getMonth(), day.getDate() + 1)
    <h2>label(daysOfWeek.get(day.getDay()))</h2>
    group {
      list(event in conf.events where startDate >= day && startDate < tomorrow order by startDate asc) {
        item {
          eventItem(event)
        }
      }
    }
  }
}

screen showEvent(evt : Event) {
  header("Event details") { backButton() }
  eventDetails(evt)
}

control eventItem(evt : Event) {
  floatBox(left=5) {
    block("dateBlob" + (evt.favorite ? "Fav" : ""), onclick={ evt.favorite = !evt.favorite; }) {
      label(buildTimeString(evt.startDate))
    }
  }
  block("event") {
    label(evt.name)
    block("speaker") {
      label(evt.speaker)
    }
  }
}

control eventDetails(evt : Event) {
  table {
    row {
      headerCol { "Title:" }
      col { label(evt.name) }
    }
    row {
      headerCol { "Speaker: " }
      col { label(evt.speaker) }
    }
    row {
      headerCol { "Start time: " }
      col { label(buildTimeString(evt.startDate)) }
    }
    row {
      headerCol { "Favorite: " }
      col { checkBox(evt.favorite, label="Favorite") }
    }
  }
  block("textBlob") {
    label(evt.abstract)
  }
}